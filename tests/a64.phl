module a64;

extern puts;
extern printf;

@Void print (@Integer i, @Integer j) [
	printf("%i %i\n", i, j);
]

class @Ta {
	field @Integer i {get:i, set:si};
	field @Integer j {get:j, set:sj};
	
	@Integer get [
		printf("Taget %i\n", this);
		return this::i;
	]
};

class @Te : @Ta {
	@Integer get [
		printf("Teget %i\n", this);
		return this::j;
	]
};

@Void main(@Integer argc, @NList<@String> argv) [

	for (var i = 0; i < argc; i=i+1) printf("%s\n", argv[i]);

	printf("%i\n", 2*8::n);
	if (2 <= 3)
		puts("Hello World!");
	else puts("!dlroW olleH");
	
	print(3, 1);
	print(4, 2);
	
	print(size_list(3), 2);
	doc printf("%i\n", get(list(3, 4, 5), 2));
	
	@Ta ta = new @Ta;
	ta.si(3);
	ta.sj(5);
	print(ta::i, ta::j);
	
	@Ta te = new @Te;
	te.sj(5);
	print(@Integer ta, @Integer te);
	
	print(ta::get, te::get);
]

except @Function<@Integer, @Integer> size_list;

PIL "
size_list(size):
	t1 = *(size, osize)
	t1 = +(t1, osize)
	t1 = +(t1, osize)
	return t1
	ret
";
